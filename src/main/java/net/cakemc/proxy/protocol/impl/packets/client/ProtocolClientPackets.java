package net.cakemc.proxy.protocol.impl.packets.client;

import net.cakemc.proxy.protocol.api.protocol.AbstractProtocol;
import net.cakemc.proxy.protocol.impl.packets.PacketRegistry;
import net.cakemc.proxy.protocol.impl.packets.client.impl.*;
import net.cakemc.proxy.protocol.impl.packets.client.impl.border.*;
import net.cakemc.proxy.protocol.impl.packets.client.impl.entity.*;
import net.cakemc.proxy.protocol.impl.packets.client.impl.inventory.*;
import net.cakemc.proxy.protocol.impl.packets.client.impl.level.*;
import net.cakemc.proxy.protocol.impl.packets.client.impl.player.*;
import net.cakemc.proxy.protocol.impl.packets.client.impl.scoreboard.*;
import net.cakemc.proxy.protocol.impl.packets.client.impl.spawn.ClientAddEntityPacket;
import net.cakemc.proxy.protocol.impl.packets.client.impl.spawn.ClientAddExperienceOrbPacket;
import net.cakemc.proxy.protocol.impl.packets.client.impl.title.*;

public class ProtocolClientPackets extends AbstractProtocol {
	private final PacketRegistry packetRegistry = new PacketRegistry();

	@Override
	public void register() {
		// status
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.STATUS,
			 ClientStatusResponsePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.STATUS,

			 ClientPongResponsePacket.class
		);

		// login
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.LOGIN,
			 ClientLoginDisconnectPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.LOGIN,

			 ClientHelloPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.LOGIN,
			 ClientGameProfilePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.LOGIN,
			 ClientLoginCompressionPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.LOGIN,
			 ClientCustomQueryPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.LOGIN,
			 ClientCookieRequestPacket.class
		);

		// config
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.CONFIG,
			 ClientCookieRequestPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.CONFIG,

			 ClientCustomPayloadPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.CONFIG,

			 ClientDisconnectPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.CONFIG,

			 ClientFinishConfigurationPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.CONFIG,

			 ClientKeepAlivePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.CONFIG,

			 ClientPingPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.CONFIG,

			 ClientResetChatPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.CONFIG,

			 ClientRegistryDataPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.CONFIG,

			 ClientResourcePackPopPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.CONFIG,

			 ClientResourcePackPushPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.CONFIG,

			 ClientStoreCookiePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.CONFIG,

			 ClientTransferPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.CONFIG,

			 ClientUpdateEnabledFeaturesPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.CONFIG,

			 ClientUpdateTagsPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.CONFIG,

			 ClientSelectKnownPacks.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.CONFIG,

			 ClientCustomReportDetailsPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.CONFIG,

			 ClientServerLinksPacket.class
		);

		// in-game
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientDelimiterPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientAddEntityPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientAddExperienceOrbPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientAnimatePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientAwardStatsPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientBlockChangedAckPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientBlockDestructionPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientBlockEntityDataPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientBlockEventPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientBlockUpdatePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientBossEventPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientChangeDifficultyPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientChunkBatchFinishedPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientChunkBatchStartPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientChunksBiomesPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientClearTitlesPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientCommandSuggestionsPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientCommandsPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientContainerClosePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientContainerSetContentPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientContainerSetDataPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientContainerSetSlotPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientCookieRequestPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientCooldownPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientCustomChatCompletionsPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientCustomPayloadPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientDamageEventPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientDebugSamplePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientDeleteChatPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientDisconnectPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientDisguisedChatPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientEntityEventPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientExplodePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientForgetLevelChunkPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientGameEventPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientHorseScreenOpenPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientHurtAnimationPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientInitializeBorderPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientKeepAlivePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientLevelChunkWithLightPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientLevelEventPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientLevelParticlesPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientLightUpdatePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientLoginPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientMapItemDataPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientMerchantOffersPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientMoveEntityPosPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientMoveEntityPosRotPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientMoveEntityRotPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientMoveVehiclePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientOpenBookPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientOpenScreenPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientOpenSignEditorPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientPingPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientPongResponsePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientPlaceGhostRecipePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientPlayerAbilitiesPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientPlayerChatPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientPlayerCombatEndPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientPlayerCombatEnterPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientPlayerCombatKillPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientPlayerInfoRemovePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientPlayerInfoUpdatePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientPlayerLookAtPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientPlayerPositionPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientRecipePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientRemoveEntitiesPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientRemoveMobEffectPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientResetScorePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientResourcePackPopPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientResourcePackPushPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientRespawnPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientRotateHeadPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSectionBlocksUpdatePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSelectAdvancementsTabPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientServerDataPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetActionBarTextPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetBorderCenterPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetBorderLerpSizePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetBorderSizePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetBorderWarningDelayPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetBorderWarningDistancePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetCameraPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetCarriedItemPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetChunkCacheCenterPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetChunkCacheRadiusPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetDefaultSpawnPositionPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetDisplayObjectivePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetEntityDataPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetEntityLinkPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetEntityMotionPacket.class
		);

		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetEquipmentPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetExperiencePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetHealthPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetObjectivePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetPassengersPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetPlayerTeamPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetScorePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetSimulationDistancePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetSubtitleTextPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetTimePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetTitleTextPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSetTitlesAnimationPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSoundEntityPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSoundPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientStartConfigurationPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientStopSoundPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientStoreCookiePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientSystemChatPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientTabListPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientTagQueryPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientTakeItemEntityPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientTeleportEntityPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientTickingStatePacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientTickingStepPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientTransferPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientUpdateAdvancementsPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientUpdateAttributesPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientUpdateMobEffectPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientUpdateRecipesPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientUpdateTagsPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientProjectilePowerPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientCustomReportDetailsPacket.class
		);
		this.packetRegistry.registerAutoId(
			 AbstractProtocol.State.GAME,
			 ClientServerLinksPacket.class
		);
	}

	public PacketRegistry getPacketRegistry() {
		return packetRegistry;
	}
}
